let carte0 = [|
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;1;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|]
|];;


let carte1 = [|
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;|];
[|0;0;0;1;1;0;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;|];
[|0;0;0;1;1;1;0;0;1;1;1;1;1;1;1;1;1;1;1;0;0;0;0;|];
[|0;0;0;1;1;0;0;0;0;1;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;1;1;0;0;0;0;0;1;1;1;1;1;1;1;1;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;1;1;1;1;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|]
|];;

let carte2 = [|
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;1;1;1;1;0;0;0;0;0;0;1;1;1;0;0;0;0;0;|];
[|0;0;0;1;1;1;1;1;1;1;0;0;0;1;1;1;1;1;1;0;0;0;0;|];
[|0;0;1;1;1;1;1;1;1;1;0;0;0;0;1;1;1;1;1;1;1;0;0;|];
[|0;0;1;1;1;1;1;1;1;1;1;0;0;0;1;1;1;1;1;1;1;1;0;|];
[|0;0;1;1;1;1;1;1;1;1;1;0;0;0;0;1;1;1;1;0;1;1;0;|];
[|0;0;1;1;1;1;1;0;0;0;1;1;0;0;0;1;1;1;1;0;1;1;0;|];
[|0;0;1;1;1;1;0;0;0;0;0;1;0;0;0;0;1;1;1;0;1;1;0;|];
[|0;0;1;1;1;1;0;0;0;0;0;1;1;0;0;0;1;1;0;0;1;1;0;|];
[|0;0;0;1;1;1;0;0;0;0;0;1;0;0;0;0;1;1;0;0;1;0;0;|];
[|0;0;0;1;1;1;1;0;0;0;1;1;0;0;0;0;1;1;0;1;1;0;0;|];
[|0;0;0;1;1;1;1;0;0;0;1;0;0;0;0;0;1;1;1;1;0;0;0;|];
[|0;0;0;0;1;1;1;1;1;1;1;0;0;0;0;0;1;1;1;0;0;0;0;|];
[|0;0;0;0;0;1;1;1;1;1;1;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|];
[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;|]
|];;

(* affiche un tabelau 2D *)
let affiche_ligne t = 
  for i = 0 to Array.length t - 1 do
    Printf.printf "%d-" t.(i)
  done;
  Printf.printf "\n"

let affiche tab =
 let n = Array.length tab in
 for i = 0 to n - 1 do
   affiche_ligne tab.(i)
 done;;

let rec afficheliste l =
  match l with
  | [] -> ()
  | x::ll -> Printf.printf "%d " x; afficheliste ll;
  Printf.printf "\n"
;;

affiche carte0;;
Printf.printf "\n\n";;

let existe x y length height =
  x >= 0 && x < length && y >= 0 && y < height
;;

let voisins carte x y length height =
  let l = ref [] in
  for i = -1 to 1 do
    for j = -1 to 1 do
      if existe (x+i) (y+j) length height then l := !l@x+i::y+j::[]
    done
  done;
  !l
;;

let toucheterre carte x y length height =
  let rec aux l =
    match l with
    | [] -> false
    | x::y::ll -> if carte.(x).(y) = 0 then true else aux ll
    | x::ll -> failwith "liste mal encodée"
  in
  let liste = voisins carte x y length height in
  aux liste
;;

let rec transfovois carte l =
  match l with
  | [] -> ()
  | x::y::ll -> carte.(x).(y) <- 0; transfovois carte ll
  | x::ll -> failwith "liste mal encodée"
;;
  

let profondeur carte =
  let prof = ref 0 in
  let length = Array.length carte in
  let height = Array.length carte.(0) in
  let l = ref [] in
  let fini = ref false in
  while not !fini do
    prof := !prof + 1;
    l := [];
    for i = 0 to (length-1) do
      for j = 0 to (height-1) do
        if carte.(i).(j) = 1 && toucheterre carte i j length height then
          l := !l@i::j::[]
      done;
    done;
    if !l <> [] then
      transfovois carte !l
    else fini := true
  done;
  !prof
;;


Printf.printf "La prof de la carte0 est %d\n" (profondeur carte0);;
Printf.printf "La prof de la carte1 est %d\n" (profondeur carte1);;
Printf.printf "La prof de la carte2 est %d\n" (profondeur carte2);;